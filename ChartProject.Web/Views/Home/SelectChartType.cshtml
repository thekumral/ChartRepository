@{
    ViewBag.Title = "Grafik Türünü Seçin";
    var chartData = ViewBag.ChartData as List<ChartProject.Web.Models.ChartDataDto>;
}

<section class="chart-type-selection">
    <div class="container">
        <div class="form-group text-center">
            <div class="chart-type-options">
                <div class="form-check form-check-inline">
                    <input type="radio" id="lineChart" name="chartType" value="line" class="form-check-input" />
                    <label for="lineChart" class="form-check-label">Line Chart</label>
                </div>
                <div class="form-check form-check-inline">
                    <input type="radio" id="barChart" name="chartType" value="bar" class="form-check-input" checked />
                    <label for="barChart" class="form-check-label">Bar Chart</label>
                </div>
                <div class="form-check form-check-inline">
                    <input type="radio" id="radarChart" name="chartType" value="radar" class="form-check-input" />
                    <label for="radarChart" class="form-check-label">Radar Chart</label>
                </div>
                <div class="form-check form-check-inline">
                    <input type="radio" id="pieChart" name="chartType" value="pie" class="form-check-input" />
                    <label for="pieChart" class="form-check-label">Pie Chart</label>
                </div>
            </div>
        </div>

        @if (chartData != null && chartData.Any())
        {
            <div class="chart-preview">
                <canvas id="chartPreviewCanvas" width="600" height="400"></canvas>
            </div>
        }

        <div id="chartDataJson" class="mt-4">
            <h4>Grafik Verileri (JSON Formatı):</h4>
            <pre>@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartData, Newtonsoft.Json.Formatting.Indented))</pre>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var chartData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartData));
            var ctx = document.getElementById('chartPreviewCanvas').getContext('2d');
            var chartType = 'bar';

            var chart = createChart(ctx, chartType, chartData);
            document.querySelectorAll('input[name="chartType"]').forEach(function (radio) {
                radio.addEventListener('change', function () {
                    chartType = this.value;
                    chart.destroy();
                    chart = createChart(ctx, chartType, chartData);
                });
            });

            function createChart(ctx, type, data) {
                var labels = data.map(d => d.Label);
                var categories = [...new Set(data.map(d => d.Category))];

                var datasets = categories.map(category => ({
                    label: category,
                    data: data.filter(d => d.Category === category).map(d => d.Value),
                    backgroundColor: getRandomColor(),
                    borderColor: getRandomColor(),
                    borderWidth: 1
                }));

                return new Chart(ctx, {
                    type: type,
                    data: {
                        labels: labels,
                        datasets: datasets
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: { beginAtZero: true },
                            y: { beginAtZero: true }
                        }
                    }
                });
            }

            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        });
    </script>
    <style>
        .chart-type-options {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

        .form-check {
            display: flex;
            align-items: center;
        }

        .form-check-label {
            margin-left: 5px;
        }

        .chart-preview {
            margin-top: 20px;
            text-align: center;
        }
    </style>
}
