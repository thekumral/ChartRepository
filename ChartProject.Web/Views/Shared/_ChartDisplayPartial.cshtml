@{
    var chartData = ViewBag.ChartData as List<ChartDataDto>;
    var chartType = ViewBag.ChartType as string;
}

@if (chartData != null && chartData.Any())
{
    <div class="chart-container">
        <h3>@chartType Grafik Türü</h3>
        <canvas id="chartCanvas" width="600" height="400"></canvas>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('chartCanvas').getContext('2d');
            var chartType = '@chartType';
            var chartData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartData));

            if (chartData && chartData.length > 0) {
                var groupedData = chartData.reduce((acc, data) => {
                    if (!acc[data.Label]) {
                        acc[data.Label] = {
                            Label: data.Label,
                            Value: 0,
                            Category: data.Category
                        };
                    }
                    acc[data.Label].Value += data.Value;
                    return acc;
                }, {});

                var sortedData = Object.values(groupedData).sort((a, b) => b.Value - a.Value);

                var labels = sortedData.map(data => data.Label);
                var values = sortedData.map(data => data.Value);

                var data = {
                    labels: labels,
                    datasets: [{
                        label: 'Data',
                        data: values,
                        backgroundColor: sortedData.map(() => getRandomColor()),
                        borderColor: sortedData.map(() => getRandomColor()),
                        borderWidth: 1
                    }]
                };

                var options = {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top'
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true,
                            ticks: {
                                autoSkip: false,
                                maxRotation: 90,
                                minRotation: 45
                            }
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                };

                new Chart(ctx, {
                    type: chartType,
                    data: data,
                    options: options
                });
            }

            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        });

    </script>
}
